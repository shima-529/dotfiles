[[plugins]]
repo = 'Shougo/neosnippet'
hook_add = '''
	imap <C-k>     <Plug>(neosnippet_expand_or_jump)
	smap <C-k>     <Plug>(neosnippet_expand_or_jump)
	xmap <C-k>     <Plug>(neosnippet_expand_target)
	let g:neosnippet#snippets_directory = '~/.vim/mysnippets'
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'lifepillar/vim-solarized8'

[[plugins]]
repo = 'tomasr/molokai'

[[plugins]]
repo = 'vim-scripts/a.vim'

[[plugins]]
repo = 'Shougo/unite.vim'

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
	let g:quickrun_config = get(g:, 'quickrun_config', {})
	let g:quickrun_config._ = {
				\ 'runner'    : 'vimproc',
				\ 'runner/vimproc/updatetime' : 60,
				\ 'outputter' : 'error',
				\ 'outputter/error/success' : 'buffer',
				\ 'outputter/error/error' : 'buffer',
				\ 'outputter/buffer/split'  : ':botright 8sp',
				\ 'outputter/buffer/close_on_empty' : 1,
				\ }
	let g:quickrun_config.python = {
				\ 'command' : 'python3',
				\ }
	let g:quickrun_config.cpp = {
				\ 'command' : 'g++',
				\ 'cmdopt': '-std=c++20 -fconcepts',
				\ }
	let g:quickrun_config['tex'] = {
				\ 'command' : 'latexmk',
				\ 'outputter' : 'error',
				\ 'outputter/error/success' : 'null',
				\ 'outputter/error/error' : 'quickfix',
				\ 'srcfile' : expand("%"),
				\ 'cmdopt': '-pdfdvi',
				\ 'hook/sweep/files' : [
				\                      '%S:p:r.aux',
				\                      '%S:p:r.bbl',
				\                      '%S:p:r.blg',
				\                      '%S:p:r.dvi',
				\                      '%S:p:r.fdb_latexmk',
				\                      '%S:p:r.fls',
				\                      '%S:p:r.log',
				\                      '%S:p:r.out',
				\                      '%S:p:r.synctex.gz'
				\                      ],
				\ 'exec': '%c %o %a %s',
				\}
	let g:quickrun_config['satysfi'] = {
				\ 'command' : 'satysfi',
				\ 'outputter' : 'error',
				\ 'outputter/error/success' : 'null',
				\ 'outputter/error/error' : 'quickfix',
				\ 'srcfile' : expand("%"),
				\}
'''

[[plugins]]
repo = 'scrooloose/syntastic.git'
hook_add = '''
	let g:syntastic_enable_signs=1
	let g:syntastic_auto_loc_list=2
	let g:syntastic_always_populate_loc_list = 1
	let g:syntastic_check_on_open = 0
	let g:syntastic_check_on_wq = 0
	let g:syntastic_c_compiler_options = '-std=gnu17 -Wall '
	let g:syntastic_cpp_compiler_options = '-std=c++2a -Wall -fconcepts '
	let g:syntastic_python_checkers = ['python3']
'''

[[plugins]]
repo = 'rhysd/clever-f.vim'

[[plugins]]
repo = 'tomtom/tcomment_vim'
hook_add = '''
	let g:tcomment#filetype#guess_awk = 'sh'
	let g:tcomment#filetype#guess_kue2 = 'sh'
'''

[[plugins]]
repo = 'Townk/vim-autoclose'

[[plugins]]
repo = 'kana/vim-smartinput'
hook_add = '''
call smartinput#map_to_trigger('i', '<Space>', '<Space>', '<Space>')
call smartinput#define_rule({
			\   'at'    : '(\%#)',
			\   'char'  : '<Space>',
			\   'input' : '<Space><Space><Left>',
			\   })
call smartinput#define_rule({
			\   'at'    : '( \%# )',
			\   'char'  : '<BS>',
			\   'input' : '<Del><BS>',
			\   })
call smartinput#map_to_trigger('i', '<Plug>(smartinput_CR)',
			\                        '<Enter>',
			\                        '<Enter>')
'''

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
	set ttimeout ttimeoutlen=30
	let g:lightline = {
				\ 'mode_map': {'c': 'NORMAL'},
				\ 'active': {
				\   'left': [
				\     ['mode', 'paste'],
				\     ['readonly', 'filename', 'modified'],
				\   ],
				\   'right': [
				\     ['lineinfo', 'syntastic'],
				\     ['percent'],
				\     ['charcode', 'fileformat', 'fileencoding', 'filetype'],
				\   ],
				\ },
				\ 'component': {
				\   'readonly': '%{&filetype=="help"?"":&readonly?"⭤":""}',
				\   'modified': '%{&filetype=="help"?"":&modified?"+":&modifiable?"":"-"}'
				\ },
				\ 'component_expand': {
				\   'syntastic': 'SyntasticStatuslineFlag'
				\ },
				\ 'component_type': {
				\   'syntastic': 'error'
				\ },
				\ 'separator': {'left': '⮀', 'right': '⮂'},
				\ 'subseparator': {'left': '⮁', 'right': '⮃'}
				\ }
'''

[[plugins]]
repo = 'Shougo/vimproc'
build = 'make'

[[plugins]]
repo = 'kien/rainbow_parentheses.vim'
hook_add = '''
	au BufEnter * RainbowParenthesesActivate
	au BufEnter * RainbowParenthesesLoadRound
	au BufEnter * RainbowParenthesesLoadSquare
	au BufEnter * RainbowParenthesesLoadBraces
	let g:rbpt_colorpairs = [
				\ ['brown',       'RoyalBlue3'],
				\ ['Darkblue',    'SeaGreen3'],
				\ ['darkgray',    'DarkOrchid3'],
				\ ['darkgreen',   'firebrick3'],
				\ ['darkcyan',    'RoyalBlue3'],
				\ ['darkred',     'SeaGreen3'],
				\ ['darkmagenta', 'DarkOrchid3'],
				\ ['brown',       'firebrick3'],
				\ ['gray',        'RoyalBlue3'],
				\ ['darkmagenta', 'DarkOrchid3'],
				\ ['Darkblue',    'firebrick3'],
				\ ['darkgreen',   'RoyalBlue3'],
				\ ['darkcyan',    'SeaGreen3'],
				\ ['darkred',     'DarkOrchid3'],
				\ ['red',         'firebrick3'],
				\ ]
	let g:rbpt_max = 15
'''

[[plugins]]
repo = 'amal-khailtash/vim-xdc-syntax'
